#!/bin/ksh

ADMIN=/usr/local/admin
HTML=/usr/local/httpd/htsecure/reports/cve.php

echo "<?php
# Script: bash.php
# Owner: Carl Schelin
# Coding Standard 3.0 Applied
# See: https://incowk01/makers/index.php/Coding_Standards
# Description:

  include('settings.php');
  include(\$Sitepath . '/guest.php');

  \$package = "bash.php";

  logaccess(\$formVars['username'], \$package, \"Accessing the script.\");

?>
<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">
<title>Bash Vulnerabilities</title>

<style type=\"text/css\" title=\"currentStyle\" media=\"screen\">
<?php include(\$Sitepath . \"/mobile.php\"); ?>
</style>

<script type=\"text/javascript\" language=\"javascript\" src=\"<?php print \$Siteroot; ?>/css/jquery.js\"></script>
<script type=\"text/javascript\" language=\"javascript\" src=\"<?php print \$Siteroot; ?>/css/themes/<?php print \$_SESSION['theme']; ?>/jquery-ui.js\"></script>
<link   rel=\"stylesheet\" type=\"text/css\"            href=\"<?php print \$Siteroot; ?>/css/themes/<?php print \$_SESSION['theme']; ?>/jquery-ui.css\">
<script type=\"text/javascript\" language=\"javascript\" src=\"<?php print \$Siteroot; ?>/functions/jquery.inventory.js\"></script>
<script type=\"text/javascript\" language=\"javascript\" src=\"<?php print \$Siteroot; ?>/css/FormTables/formTables.js\"></script>
<link   rel=\"stylesheet\" type=\"text/css\"            href=\"<?php print \$Siteroot; ?>/css/FormTables/formTables.css\">

</head>
<body class=\"ui-widget-content\">

<?php include(\$Sitepath . '/topmenu.start.php'); ?>
<?php include(\$Sitepath . '/topmenu.end.php'); ?>

<div class=\"main\">

<table class=\"ui-styled-table\">
<tr>
  <th class=\"ui-state-default\">showbash: `date`</th>
  <th class=\"ui-state-default\" width=\"20\"><a href=\"javascript:;\" onmousedown=\"toggleDiv('help');\">Help</a></th>
</tr>
</table>

<div id=\"help\" style=\"display:none\">

<div class=\"main-help ui-widget-content\">

<h2>Shellshock</h2>

<p><strong><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6271\">CVE-2014-6271</a></strong> - GNU Bash through 4.3 processes trailing strings after function definitions in the values of environment variables, which allows remote attackers to execute arbitrary code via a crafted environment, as demonstrated by vectors involving the ForceCommand feature in OpenSSH sshd, the mod_cgi and mod_cgid modules in the Apache HTTP Server, scripts executed by unspecified DHCP clients, and other situations in which setting the environment occurs across a privilege boundary from Bash execution, aka \"ShellShock.\" NOTE: the original fix for this issue was incorrect; CVE-2014-7169 has been assigned to cover the vulnerability that is still present after the incorrect fix.</p>

<p><strong><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-7169\">CVE-2014-7169</a></strong> - GNU Bash through 4.3 bash43-025 processes trailing strings after certain malformed function definitions in the values of environment variables, which allows remote attackers to write to files or possibly have unknown other impact via a crafted environment, as demonstrated by vectors involving the ForceCommand feature in OpenSSH sshd, the mod_cgi and mod_cgid modules in the Apache HTTP Server, scripts executed by unspecified DHCP clients, and other situations in which setting the environment occurs across a privilege boundary from Bash execution. NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-6271.</p>

<p><strong><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-7186\">CVE-2014-7186</a></strong> - The redirection implementation in parse.y in GNU Bash through 4.3 bash43-026 allows remote attackers to cause a denial of service (out-of-bounds array access and application crash) or possibly have unspecified other impact via crafted use of here documents, aka the \"redir_stack\" issue.</p>

<p><strong><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-7187\">CVE-2014-7187</a></strong> - Off-by-one error in the read_token_word function in parse.y in GNU Bash through 4.3 bash43-026 allows remote attackers to cause a denial of service (out-of-bounds array access and application crash) or possibly have unspecified other impact via deeply nested for loops, aka the \"word_lineno\" issue.</p>

</div>

</div>


<table class=\"ui-styled-table\">
<tr>
</tr>
<tr>
  <th class=\"ui-state-default\">Server</th>
  <th class=\"ui-state-default\">Bash Version</th>
  <th class=\"ui-state-default\">CVE-2014-6271</th>
  <th class=\"ui-state-default\">CVE-2014-7169</th>
  <th class=\"ui-state-default\">CVE-2014-7186</th>
  <th class=\"ui-state-default\">CVE-2014-7187</th>
</tr>" > $HTML

for i in `grep -v "^#" $ADMIN/etc/servers`
do
  SERVER=`echo $i | cut -f1 -d:`
  OS=`echo $i | cut -f3 -d:`

  if [[ -f $ADMIN/servers/$SERVER/bash.vulnerable ]] || [[ -f $ADMIN/servers/$SERVER/bash.cve ]]
  then
    echo "<tr>" >> $HTML
    echo "  <td class=\"ui-widget-content\">$SERVER</td>" >> $HTML
    echo "  <td class=\"ui-widget-content\">`head -1 $ADMIN/servers/$SERVER/bash.vulnerable`</td>" >> $HTML

    CLASS="ui-widget-content"
    if [[ $OS = 'Linux' ]]
    then
      OUTPUT=`grep CVE-2014-6271 $ADMIN/servers/$SERVER/bash.cve | head -1`
      if [[ -z $OUTPUT ]]
      then
        CLASS="ui-state-error"
        OUTPUT="CVE Vulnerable"
      fi
    else
      OUTPUT=`grep Output: $ADMIN/servers/$SERVER/bash.vulnerable | tail -4 | head -1`
      VULN=`echo $OUTPUT | grep vulnerable`
      if [[ ! -z $VULN ]]
      then
        CLASS="ui-state-error"
      fi
    fi
    echo "  <td class=\"$CLASS\">$OUTPUT</td>" >> $HTML

    CLASS="ui-widget-content"
    if [[ $OS = 'Linux' ]]
    then
      OUTPUT=`grep CVE-2014-7169 $ADMIN/servers/$SERVER/bash.cve | head -1`
      if [[ -z $OUTPUT ]]
      then
        CLASS="ui-state-error"
        OUTPUT="CVE Vulnerable"
      fi
    else
      OUTPUT=`grep Output: $ADMIN/servers/$SERVER/bash.vulnerable | tail -3 | head -1`
      DATE=`date +"%b"`
      VULN=`echo $OUTPUT | grep $DATE`
      if [[ ! -z $VULN ]]
      then
        CLASS="ui-state-error"
      fi
    fi
    echo "  <td class=\"$CLASS\">$OUTPUT</td>" >> $HTML

    CLASS="ui-widget-content"
    if [[ $OS = 'Linux' ]]
    then
      OUTPUT=`grep CVE-2014-7186 $ADMIN/servers/$SERVER/bash.cve | head -1`
      if [[ -z $OUTPUT ]]
      then
        CLASS="ui-state-error"
        OUTPUT="CVE Vulnerable"
      fi
    else
      OUTPUT=`grep Output: $ADMIN/servers/$SERVER/bash.vulnerable | tail -2 | head -1`
      VULN=`echo $OUTPUT | grep vulnerable`
      if [[ ! -z $VULN ]]
      then
        CLASS="ui-state-error"
      fi
    fi
    echo "  <td class=\"$CLASS\">$OUTPUT</td>" >> $HTML

    CLASS="ui-widget-content"
    if [[ $OS = 'Linux' ]]
    then
      OUTPUT=`grep CVE-2014-7187 $ADMIN/servers/$SERVER/bash.cve | head -1`
      if [[ -z $OUTPUT ]]
      then
        CLASS="ui-state-error"
        OUTPUT="CVE Vulnerable"
      fi
    else
      OUTPUT=`grep Output: $ADMIN/servers/$SERVER/bash.vulnerable | tail -1`
      VULN=`echo $OUTPUT | grep vulnerable`
      if [[ ! -z $VULN ]]
      then
        CLASS="ui-state-error"
      fi
    fi
    echo "  <td class=\"$CLASS\">$OUTPUT</td>" >> $HTML

    echo "</tr>" >> $HTML
  else
    echo "<tr>" >> $HTML
    echo "  <td class=\"ui-widget-content\">$SERVER</td>" >> $HTML
    echo "  <td class=\"ui-widget-content\" colspan=\"5\">File not found</td>" >> $HTML
    echo "</tr>" >> $HTML
  fi
done

echo "</table>

</div>

<?php include(\$Sitepath . '/footer.php'); ?>

</body>
</html>" >> $HTML
