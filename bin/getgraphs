#!/bin/ksh

ADMIN=/usr/local/admin

# IEN Servers
IEN=`grep -v "^#" $ADMIN/etc/servers | grep IEN | cut -f1 -d:`

# Linux Servers -IEN - takes about 15 minutes to retrieve. Almost where we need to extract and split
LINUX=`grep -v "^#" $ADMIN/etc/servers | grep -v IEN | grep Linux | cut -f1 -d:`

# Sun Servers -IEN
SUN=`grep -v "^#" $ADMIN/etc/servers | grep -v IEN | grep SunOS | cut -f1 -d:`

# Linux server processing:
if [[ "$1" = "ien" ]]
then
  GRAPHS=$IEN
fi

if [[ "$1" = "linux" ]]
then
  GRAPHS=$LINUX
fi

if [[ "$1" = "sun" ]]
then
  GRAPHS=$SUN
fi

if [[ ! "$1" = "" && "$GRAPHS" = "" ]]
then
  GRAPHS="$1"
fi

if [[ "$GRAPHS" = "" ]]
then
  echo "You need to pass ien, other, meridian, lab, or a server name on the command line."
  exit 1
fi

PROGNAME="getgraphs"
RRDPATH=/usr/local/httpd/htsecure/rrdtool

for i in $GRAPHS
do
  TIMEOUT=80
  SVRPATH=/usr/local/admin/servers/$i

  if [[ ! -d $RRDPATH/$i ]]
  then
    mkdir -p $RRDPATH/$i
  fi
  if [[ ! -f $RRDPATH/$i/index.php ]]
  then
    cp $RRDPATH/lnmt1cuomjs1/index.php $RRDPATH/$i
  fi
  if [[ -f $RRDPATH/$i/cpu-day.png ]]
  then
    rm $RRDPATH/$i/*.png
  fi
  echo $i

# make sure all the necessary files have been downloaded, but only try 5 times
  COUNT=5
  while true
  do
    scp $i:/var/rrdtool/graphs/* $RRDPATH/$i/ &
    PID=$!

# wait for the specified number of seconds for scp to complete
# if the timeout is exceeded, kill the process and move on to the next box

# .2 seems to pause enough for the scp command to finish without taking a full second for each system.
    /usr/bin/perl -e 'select(undef,undef,undef,.2)'
    /usr/bin/ps -p $PID > /dev/null 2>&1
    if [[ $? -eq 0 ]]
    then
      while [[ $TIMEOUT -gt 0 ]]
      do
        /usr/bin/ps -p $PID > /dev/null 2>&1
        if [[ $? -ne 0 ]]
        then
          break
        fi
        TIMEOUT=$(($TIMEOUT - 1))
        sleep 1
      done

# if the timeout reaches 0, then the process was killed. Report something.

      if [[ $TIMEOUT -le 0 ]]
      then
        echo "ERROR: Unable to connect to server ($PROGNAME)" >> $SVRPATH/config.status
        echo "ERROR: Unable to connect to server ($PROGNAME)" >> $SVRPATH/morning.status
        chmod 664 $SVRPATH/config.status
        chmod 664 $SVRPATH/morning.status
        kill -KILL $PID
      fi
    fi

# exit out of the while loop if all the files downloaded.
    if [[ -f $RRDPATH/$i/load-day-thumb.png && -f $RRDPATH/$i/mem-day-thumb.png && -f $RRDPATH/$i/cpu-day-thumb.png && -f $RRDPATH/$i/ram-day-thumb.png ]]
    then
      break;
    fi

    if [[ -f $RRDPATH/$i/load-day-thumb.png && -f $RRDPATH/$i/mem-day-thumb.png && -f $RRDPATH/$i/cpu-day-thumb.png && -f $RRDPATH/$i/swap-day-thumb.png ]]
    then
      break;
    fi

# when all loops are done, kill it anyway
    if [[ $COUNT -lt 1 ]]
    then
      break;
    fi

    echo "$i: Failed to retrieve files, trying again ($COUNT)"

    COUNT=$(($COUNT - 1))
  done
done

