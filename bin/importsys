#!/bin/ksh

# Carl Schelin
# simple script that takes all the chksys.good files and imports the data into the database.
# the 'chksys' script in the servers directory does a piecemeal import, only importing if there are changes. 
# this script imports every server's data and is intended to be run once a week.
# with this, we can also check older entries and remove them if needed.
#
# 2016-02-04 - changing to import the chksys.import files. The data is stable and no reason to wait for a manual input

BASENAME=$(basename "$0")
DIRNAME=$(dirname "$0")

if [[ ! -f ${DIRNAME}/../.config ]]
then
  echo "Unable to locate ${DIRNAME}/../.config. Exiting."
  exit 1
fi

# Source the configuration file
. "${DIRNAME}"/../.config

LOG=${ADMIN_LOGS}/chksys.log
ERRORS=${ADMIN_LOGS}/chksys.errors

if [[ ${RUNBY} != 5000 ]]
then
  echo "Script must be run by the unixsvc Service account."
  exit 1
fi

if [[ -f ${LOG} ]]
then
  rm ${LOG}
fi

# for the settings.php file to work, you need to be in the same directory.
cd /var/www/bin
for i in `grep -v "^#" ${ADMIN_DATA}/servers | cut -f1 -d:`
do
  if [[ -f ${ADMIN}/servers/${i}/chksys.import ]]
  then
    echo "$i"
    cd /var/www/bin
    ./import.php ${ADMIN}/servers/${i}/chksys.import >> $LOG
  else
    echo "${i}!"
    echo "Missing chksys.import: ${i}" >> $LOG
  fi
done

#OUTPUT=`egrep "(Sorry: Unable to locate|Skipping|ERROR)" $LOG`
#egrep "(Sorry: Unable to locate|Skipping|ERROR)" $LOG | sort > $ERRORS

OUTPUT=`egrep -v "(uuid|system|filesystem|hostname|fqdn|interface|routing|hardware|software|timezone|configuration|last patch date) found" $LOG | grep -v "interface names... Found" | egrep -v "clearing (cpu|hard disk) validate" | grep -v "Server name is blank" | grep -v "^Found "`
egrep -v "(uuid|system|filesystem|hostname|fqdn|interface|routing|hardware|software|timezone|configuration|last patch date) found" $LOG | grep -v "interface names... Found" | egrep -v "clearing (cpu|hard disk) validate" | grep -v "Server name is blank" | grep -v "^Found " | sort > $ERRORS

if [[ ! -z ${OUTPUT} ]]
then
  cat ${ERRORS} | mailx -s "chksys Import Issues" ${WHOCARES}
fi

