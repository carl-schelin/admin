#!/bin/ksh

# getetc - Retrieve all the files from the etc directory.
# Owner: Carl Schelin

PROGNAME="getetc"
LOC=/usr/local/admin

for i in `grep -v "^#" $LOC/etc/servers`
do
  SERVER=`echo $i|cut -f1 -d:`
  FQDN=`echo $i|cut -f2 -d:`
  OS=`echo $i|cut -f3 -d:`

# add the dot for the scp command
  if [[ ! -z $FQDN ]]
  then
    FQDN=".$FQDN"
  fi

# Check to make sure the target directory exists
# if not, create it and set the perms

  SVRPATH="$LOC/servers/$SERVER"

  if [ ! -d $SVRPATH ]
  then
    mkdir $SVRPATH
    chmod 775 $SVRPATH
  fi

  TIMEOUT=80

# Content here: scp the config file from here

  CONTENT="etc.tar.gz"

  if [ -f $SVRPATH/$CONTENT ]
  then
    rm $SVRPATH/$CONTENT
  fi

  /usr/bin/scp $SERVER$FQDN:/opt/intrado/$CONTENT $SVRPATH/ 2>&1 &
  PID=$!

# wait for the specified number of seconds for scp to complete
# if the timeout is exceeded, kill the process and move on to the next box

# .2 seems to pause enough for the scp command to finish without taking a full second for each system.
  /usr/bin/perl -e 'select(undef,undef,undef,.2)'
  /usr/bin/ps -p $PID > /dev/null 2>&1
  if [[ $? -eq 0 ]]
  then
    while [[ $TIMEOUT -gt 0 ]]
    do
      /usr/bin/ps -p $PID > /dev/null 2>&1
      if [[ $? -ne 0 ]]
      then
        break
      fi
      TIMEOUT=$(($TIMEOUT - 1))
      sleep 1
    done

# if the timeout reaches 0, then the process was killed. Report something.
    if [[ $TIMEOUT -le 0 ]]
    then
      echo "ERROR: Unable to connect to server ($PROGNAME)" >> $SVRPATH/config.status
      echo "ERROR: Unable to connect to server ($PROGNAME)" >> $SVRPATH/morning.status
      chmod 664 $SVRPATH/config.status
      chmod 664 $SVRPATH/morning.status
      kill -KILL $PID
    fi
  fi

done

exit 0

